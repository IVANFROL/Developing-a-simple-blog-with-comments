version: '3.8'

services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blog_app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./backend:/var/www
    networks:
      - blog_network

  db:
    image: mysql:8.0
    container_name: blog_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: blog_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_PASSWORD: password
      MYSQL_USER: blog_user
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - blog_network

  nginx:
    image: nginx:alpine
    container_name: blog_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - blog_network
    depends_on:
      - app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - blog_network
    depends_on:
      - app

volumes:
  dbdata:

networks:
  blog_network:
    driver: bridge 