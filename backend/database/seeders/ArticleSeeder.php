<?php

namespace Database\Seeders;

use App\Models\Article;
use App\Models\Comment;
use Illuminate\Database\Seeder;

class ArticleSeeder extends Seeder
{
    public function run(): void
    {
        $articles = [
            [
                'title' => 'Введение в Laravel Framework',
                'content' => 'Laravel - это современный PHP фреймворк, который предоставляет элегантный синтаксис и мощные инструменты для разработки веб-приложений. В этой статье мы рассмотрим основные концепции и возможности Laravel.',
                'comments' => [
                    [
                        'author_name' => 'Алексей Петров',
                        'content' => 'Отличная статья! Laravel действительно очень удобный фреймворк.'
                    ],
                    [
                        'author_name' => 'Мария Сидорова',
                        'content' => 'Спасибо за подробное объяснение. Очень помогло в изучении.'
                    ]
                ]
            ],
            [
                'title' => 'React: Основы современной разработки',
                'content' => 'React - это JavaScript библиотека для создания пользовательских интерфейсов. Она позволяет создавать интерактивные веб-приложения с компонентным подходом. В этой статье мы изучим основы React.',
                'comments' => [
                    [
                        'author_name' => 'Дмитрий Козлов',
                        'content' => 'React изменил мой подход к фронтенд разработке. Отличная библиотека!'
                    ]
                ]
            ],
            [
                'title' => 'Docker для разработчиков',
                'content' => 'Docker - это платформа для разработки, доставки и запуска приложений в контейнерах. Он позволяет создавать изолированные среды для разработки и развертывания. Рассмотрим основные концепции Docker.',
                'comments' => [
                    [
                        'author_name' => 'Елена Волкова',
                        'content' => 'Docker значительно упростил процесс развертывания наших приложений.'
                    ],
                    [
                        'author_name' => 'Сергей Морозов',
                        'content' => 'Отличная статья! Теперь понимаю, зачем нужны контейнеры.'
                    ],
                    [
                        'author_name' => 'Анна Соколова',
                        'content' => 'Спасибо за подробное руководство по Docker.'
                    ]
                ]
            ],
            [
                'title' => 'REST API: Принципы и лучшие практики',
                'content' => 'REST API - это архитектурный стиль для создания веб-сервисов. В этой статье мы рассмотрим основные принципы REST, HTTP методы и лучшие практики проектирования API.',
                'comments' => [
                    [
                        'author_name' => 'Игорь Новиков',
                        'content' => 'Очень полезная статья для понимания REST принципов.'
                    ]
                ]
            ],
            [
                'title' => 'Git: Система контроля версий',
                'content' => 'Git - это распределенная система контроля версий, которая позволяет отслеживать изменения в коде и эффективно работать в команде. Изучим основные команды и концепции Git.',
                'comments' => [
                    [
                        'author_name' => 'Ольга Иванова',
                        'content' => 'Git стал незаменимым инструментом в моей работе.'
                    ],
                    [
                        'author_name' => 'Павел Смирнов',
                        'content' => 'Отличное объяснение основ Git. Спасибо!'
                    ]
                ]
            ]
        ];

        foreach ($articles as $articleData) {
            $comments = $articleData['comments'];
            unset($articleData['comments']);
            
            $article = Article::create($articleData);
            
            foreach ($comments as $commentData) {
                $article->comments()->create($commentData);
            }
        }
    }
} 